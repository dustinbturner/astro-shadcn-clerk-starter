---
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import CustomLink from "@/components/CustomLink";
---

<Card className="mx-auto max-w-sm">
  <CardHeader>
    <CardTitle className="text-xl">Sign Up</CardTitle>
    <CardDescription>
      Enter your information to create an account
    </CardDescription>
  </CardHeader>
  <CardContent>
    <form id="signup-form" class="grid gap-4">
      <div class="grid grid-cols-2 gap-4">
        <div class="grid gap-2">
          <Label htmlFor="first-name">First name</Label>
          <Input id="first-name" placeholder="Max" required />
        </div>
        <div class="grid gap-2">
          <Label htmlFor="last-name">Last name</Label>
          <Input id="last-name" placeholder="Robinson" required />
        </div>
      </div>
      <div class="grid gap-2">
        <Label htmlFor="email">Email</Label>
        <Input
          id="email"
          type="email"
          placeholder="m@example.com"
          required
        />
      </div>
      <div class="grid gap-2">
        <Label htmlFor="password">Password</Label>
        <Input id="password" type="password" required />
      </div>
      <Button type="submit" className="w-full">
        Create an account
      </Button>
      <Button type="button" variant="outline" className="w-full" id="github-signup">
        Sign up with GitHub
      </Button>
    </form>
    <div class="mt-4 text-center text-sm">
      Already have an account?{" "}
      <CustomLink to="/sign-in" className="underline">
        Sign in
      </CustomLink>
    </div>
  </CardContent>
</Card>

<script>
  import { Clerk } from '@clerk/clerk-js';

  const clerk = new Clerk(import.meta.env.PUBLIC_CLERK_PUBLISHABLE_KEY);
  await clerk.load();

  if (!clerk.client) {
    throw new Error('Clerk client not initialized');
  }

  const form = document.querySelector<HTMLFormElement>('#signup-form');
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const firstName = (document.getElementById('first-name') as HTMLInputElement)?.value;
    const lastName = (document.getElementById('last-name') as HTMLInputElement)?.value;
    const email = (document.getElementById('email') as HTMLInputElement)?.value;
    const password = (document.getElementById('password') as HTMLInputElement)?.value;

    if (!firstName || !lastName || !email || !password) {
      console.error('All fields are required');
      return;
    }

    try {
      await clerk.client!.signUp.create({
        firstName,
        lastName,
        emailAddress: email,
        password,
      });
      // Redirect to dashboard or verification page
      window.location.href = '/dashboard';
    } catch (error) {
      console.error('Error during sign up:', error);
      // Handle error (e.g., display error message to user)
    }
  });

  const githubButton = document.querySelector<HTMLButtonElement>('#github-signup');
  githubButton?.addEventListener('click', () => {
    clerk.openSignUp({
      afterSignUpUrl: '/dashboard',
      appearance: {
        elements: {
          socialButtonsBlockButton: {
            display: "none"
          }
        }
      }
    });
  });
</script>