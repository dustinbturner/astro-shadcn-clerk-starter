---
import { getEntry } from 'astro:content';
import BlogPostLayout from '@/layouts/blog-post.astro';
import { getPostBySlug, getCategoriesForPost, getViewCount, getLikeCount, addView } from '@/utils/db';

export const prerender = false;

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect('/404');
}

const post = await getEntry('blog', slug);

if (!post) {
  return Astro.redirect('/404');
}

const { Content } = await post.render();

// Fetch dynamic data from Astro DB
let dbPost, categories, viewCount, likeCount;

try {
  dbPost = await getPostBySlug(slug);
  
  if (dbPost) {
    categories = await getCategoriesForPost(dbPost.id);
    viewCount = await getViewCount(dbPost.id);
    likeCount = await getLikeCount(dbPost.id);
    
    // Increment view count
    await addView(dbPost.id);
  }
} catch (error) {
  console.error('Error fetching dynamic data:', error);
}

// Use default values if DB fetch failed
categories = categories || [{ name: post.data.category, slug: post.data.category }];
viewCount = viewCount || 0;
likeCount = likeCount || 0;
---

<BlogPostLayout 
  title={post.data.title}
  date={post.data.pubDate}
  post={post}
  categories={categories}
  viewCount={viewCount}
  likeCount={likeCount}
  slug={slug}
>
  <Content />
</BlogPostLayout>